{"ast":null,"code":"var _jsxFileName = \"D:\\\\soalkerjaan\\\\telkom-indonesia\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport logo from \"./logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({\n    prof: {},\n    repos: []\n  });\n  const [loading, setLoading] = useState(false);\n  const inputEl = useRef(null);\n\n  async function search() {\n    setLoading(true);\n    const {\n      prof,\n      repos\n    } = await getApiData();\n    setLoading(false);\n\n    if (prof.message === \"Not Found\") {\n      inputEl.current.focus();\n    } else {\n      setUser({\n        prof,\n        repos\n      });\n    }\n  }\n\n  async function getApiData() {\n    const [prof, repos] = await Promise.all([fetch(`https://api.github.com/users/${inputEl.current.value}`).then(response => response.json()), fetch(`https://api.github.com/users/${inputEl.current.value}/repos`).then(response => response.json())]);\n    return {\n      prof,\n      repos\n    };\n  }\n\n  function handleEnterKey() {\n    const ENTER = 13;\n\n    if (window.event.keyCode === ENTER) {\n      search();\n      inputEl.current.blur();\n    }\n  }\n\n  function selectText() {\n    inputEl.current.select();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"ListRepos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onKeyPress: handleEnterKey,\n        onFocus: selectText,\n        searchFunction: search,\n        loadingState: loading,\n        inputRef: inputEl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/LucasSonego\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(GoMarkGithub, {\n          size: \"36px\",\n          color: \"#eee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), user.prof.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(User, {\n        prof: user.prof\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RepoList, {\n        children: user.repos.map(r => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"repo\",\n          children: /*#__PURE__*/_jsxDEV(Repo, {\n            repo: r\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CBu+y/6opufkopFSHxoO8JEju6c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/soalkerjaan/telkom-indonesia/src/App.js"],"names":["React","useState","useRef","App","user","setUser","prof","repos","loading","setLoading","inputEl","search","getApiData","message","current","focus","Promise","all","fetch","value","then","response","json","handleEnterKey","ENTER","window","event","keyCode","blur","selectText","select","id","map","r"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAC9BK,IAAAA,IAAI,EAAE,EADwB;AAE9BC,IAAAA,KAAK,EAAE;AAFuB,GAAD,CAAhC;AAKC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMS,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB;;AAEA,iBAAeS,MAAf,GAAwB;AACtBF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAM;AAAEH,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,MAAMK,UAAU,EAAxC;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,QAAIH,IAAI,CAACO,OAAL,KAAiB,WAArB,EAAkC;AAChCH,MAAAA,OAAO,CAACI,OAAR,CAAgBC,KAAhB;AACD,KAFD,MAEO;AACLV,MAAAA,OAAO,CAAC;AACNC,QAAAA,IADM;AAENC,QAAAA;AAFM,OAAD,CAAP;AAID;AACF;;AAED,iBAAeK,UAAf,GAA4B;AAC1B,UAAM,CAACN,IAAD,EAAOC,KAAP,IAAgB,MAAMS,OAAO,CAACC,GAAR,CAAY,CACtCC,KAAK,CACF,gCAA+BR,OAAO,CAACI,OAAR,CAAgBK,KAAM,EADnD,CAAL,CAEEC,IAFF,CAEOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFnB,CADsC,EAItCJ,KAAK,CACF,gCAA+BR,OAAO,CAACI,OAAR,CAAgBK,KAAM,QADnD,CAAL,CAEEC,IAFF,CAEOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFnB,CAJsC,CAAZ,CAA5B;AASA,WAAO;AAAEhB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACD;;AAED,WAASgB,cAAT,GAA0B;AACxB,UAAMC,KAAK,GAAG,EAAd;;AACA,QAAIC,MAAM,CAACC,KAAP,CAAaC,OAAb,KAAyBH,KAA7B,EAAoC;AAClCb,MAAAA,MAAM;AACND,MAAAA,OAAO,CAACI,OAAR,CAAgBc,IAAhB;AACD;AACF;;AAED,WAASC,UAAT,GAAsB;AACpBnB,IAAAA,OAAO,CAACI,OAAR,CAAgBgB,MAAhB;AACD;;AAED,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,UAAU,EAAEP,cADd;AAEE,QAAA,OAAO,EAAEM,UAFX;AAGE,QAAA,cAAc,EAAElB,MAHlB;AAIE,QAAA,YAAY,EAAEH,OAJhB;AAKE,QAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AACE,QAAA,IAAI,EAAC,gCADP;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,GAAG,EAAC,qBAHN;AAAA,+BAKE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAmBGN,IAAI,CAACE,IAAL,CAAUyB,EAAV,iBACC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE3B,IAAI,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,QAAD;AAAA,kBACGF,IAAI,CAACG,KAAL,CAAWyB,GAAX,CAAeC,CAAC,iBACf;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,WAA0BA,CAAC,CAACF,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GA1FQ5B,G;;KAAAA,G;AA2FT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\n\nimport logo from './logo.svg';\n\n\n\nfunction App() {\n\tconst [user, setUser] = useState({\n    prof: {},\n    repos: []\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const inputEl = useRef(null);\n\n  async function search() {\n    setLoading(true);\n    const { prof, repos } = await getApiData();\n    setLoading(false);\n\n    if (prof.message === \"Not Found\") {\n      inputEl.current.focus();\n    } else {\n      setUser({\n        prof,\n        repos\n      });\n    }\n  }\n\n  async function getApiData() {\n    const [prof, repos] = await Promise.all([\n      fetch(\n        `https://api.github.com/users/${inputEl.current.value}`\n      ).then(response => response.json()),\n      fetch(\n        `https://api.github.com/users/${inputEl.current.value}/repos`\n      ).then(response => response.json())\n    ]);\n\n    return { prof, repos };\n  }\n\n  function handleEnterKey() {\n    const ENTER = 13;\n    if (window.event.keyCode === ENTER) {\n      search();\n      inputEl.current.blur();\n    }\n  }\n\n  function selectText() {\n    inputEl.current.select();\n  }\n\n  return (\n    <Container>\n      <Topbar>\n        <Title>ListRepos</Title>\n        <SearchBar\n          onKeyPress={handleEnterKey}\n          onFocus={selectText}\n          searchFunction={search}\n          loadingState={loading}\n          inputRef={inputEl}\n        />\n        <a\n          href=\"https://github.com/LucasSonego\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <GoMarkGithub size=\"36px\" color=\"#eee\" />\n        </a>\n      </Topbar>\n\n      {user.prof.id && (\n        <>\n          <User prof={user.prof} />\n\n          <RepoList>\n            {user.repos.map(r => (\n              <li className=\"repo\" key={r.id}>\n                <Repo repo={r} />\n              </li>\n            ))}\n          </RepoList>\n        </>\n      )}\n    </Container>\n  );\n\t\n\t\n\t\n\t\n\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}